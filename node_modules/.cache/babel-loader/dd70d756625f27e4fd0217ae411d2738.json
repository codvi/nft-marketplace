{"ast":null,"code":"//require('dotenv').config();\nconst key=process.env.REACT_APP_PINATA_KEY;const secret=process.env.REACT_APP_PINATA_SECRET;const axios=require('axios');const FormData=require('form-data');export const uploadJSONToIPFS=async JSONBody=>{const url=\"https://api.pinata.cloud/pinning/pinJSONToIPFS\";//making axios POST request to Pinata ⬇️\nreturn axios.post(url,JSONBody,{headers:{pinata_api_key:key,pinata_secret_api_key:secret}}).then(function(response){return{success:true,pinataURL:\"https://gateway.pinata.cloud/ipfs/\"+response.data.IpfsHash};}).catch(function(error){console.log(error);return{success:false,message:error.message};});};export const uploadFileToIPFS=async file=>{const url=\"https://api.pinata.cloud/pinning/pinFileToIPFS\";//making axios POST request to Pinata ⬇️\nlet data=new FormData();data.append('file',file);const metadata=JSON.stringify({name:'testname',keyvalues:{exampleKey:'exampleValue'}});data.append('pinataMetadata',metadata);//pinataOptions are optional\nconst pinataOptions=JSON.stringify({cidVersion:0,customPinPolicy:{regions:[{id:'FRA1',desiredReplicationCount:1},{id:'NYC1',desiredReplicationCount:2}]}});data.append('pinataOptions',pinataOptions);return axios.post(url,data,{maxBodyLength:'Infinity',headers:{'Content-Type':\"multipart/form-data; boundary=\".concat(data._boundary),pinata_api_key:key,pinata_secret_api_key:secret}}).then(function(response){console.log(\"image uploaded\",response.data.IpfsHash);return{success:true,pinataURL:\"https://gateway.pinata.cloud/ipfs/\"+response.data.IpfsHash};}).catch(function(error){console.log(error);return{success:false,message:error.message};});};","map":{"version":3,"names":["key","process","env","REACT_APP_PINATA_KEY","secret","REACT_APP_PINATA_SECRET","axios","require","FormData","uploadJSONToIPFS","JSONBody","url","post","headers","pinata_api_key","pinata_secret_api_key","then","response","success","pinataURL","data","IpfsHash","catch","error","console","log","message","uploadFileToIPFS","file","append","metadata","JSON","stringify","name","keyvalues","exampleKey","pinataOptions","cidVersion","customPinPolicy","regions","id","desiredReplicationCount","maxBodyLength","concat","_boundary"],"sources":["C:/Users/upadh/Desktop/nft_mp/NFT-Marketplace-Tutorial/src/pinata.js"],"sourcesContent":["//require('dotenv').config();\r\nconst key = process.env.REACT_APP_PINATA_KEY;\r\nconst secret = process.env.REACT_APP_PINATA_SECRET;\r\n\r\nconst axios = require('axios');\r\nconst FormData = require('form-data');\r\n\r\nexport const uploadJSONToIPFS = async(JSONBody) => {\r\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\r\n    //making axios POST request to Pinata ⬇️\r\n    return axios \r\n        .post(url, JSONBody, {\r\n            headers: {\r\n                pinata_api_key: key,\r\n                pinata_secret_api_key: secret,\r\n            }\r\n        })\r\n        .then(function (response) {\r\n           return {\r\n               success: true,\r\n               pinataURL: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n           };\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error)\r\n            return {\r\n                success: false,\r\n                message: error.message,\r\n            }\r\n\r\n    });\r\n};\r\n\r\nexport const uploadFileToIPFS = async(file) => {\r\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n    //making axios POST request to Pinata ⬇️\r\n    \r\n    let data = new FormData();\r\n    data.append('file', file);\r\n\r\n    const metadata = JSON.stringify({\r\n        name: 'testname',\r\n        keyvalues: {\r\n            exampleKey: 'exampleValue'\r\n        }\r\n    });\r\n    data.append('pinataMetadata', metadata);\r\n\r\n    //pinataOptions are optional\r\n    const pinataOptions = JSON.stringify({\r\n        cidVersion: 0,\r\n        customPinPolicy: {\r\n            regions: [\r\n                {\r\n                    id: 'FRA1',\r\n                    desiredReplicationCount: 1\r\n                },\r\n                {\r\n                    id: 'NYC1',\r\n                    desiredReplicationCount: 2\r\n                }\r\n            ]\r\n        }\r\n    });\r\n    data.append('pinataOptions', pinataOptions);\r\n\r\n    return axios \r\n        .post(url, data, {\r\n            maxBodyLength: 'Infinity',\r\n            headers: {\r\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\r\n                pinata_api_key: key,\r\n                pinata_secret_api_key: secret,\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            console.log(\"image uploaded\", response.data.IpfsHash)\r\n            return {\r\n               success: true,\r\n               pinataURL: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n           };\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error)\r\n            return {\r\n                success: false,\r\n                message: error.message,\r\n            }\r\n\r\n    });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}