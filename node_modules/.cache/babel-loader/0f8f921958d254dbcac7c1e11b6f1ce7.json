{"ast":null,"code":"import Navbar from\"./Navbar\";import{useLocation,useParams}from'react-router-dom';import MarketplaceJSON from\"../Marketplace.json\";import axios from\"axios\";import{useState}from\"react\";import NFTTile from\"./NFTTile\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Profile(){const[data,updateData]=useState([]);const[dataFetched,updateFetched]=useState(false);const[address,updateAddress]=useState(\"0x\");const[totalPrice,updateTotalPrice]=useState(\"0\");async function getNFTData(tokenId){const ethers=require(\"ethers\");let sumPrice=0;//After adding your Hardhat network to your metamask, this code will get providers and signers\nconst provider=new ethers.providers.Web3Provider(window.ethereum);const signer=provider.getSigner();const addr=await signer.getAddress();//Pull the deployed contract instance\nlet contract=new ethers.Contract(MarketplaceJSON.address,MarketplaceJSON.abi,signer);//create an NFT Token\nlet transaction=await contract.getMyNFTs();/*\r\n        * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n        * and creates an object of information that is to be displayed\r\n        */const items=await Promise.all(transaction.map(async i=>{const tokenURI=await contract.tokenURI(i.tokenId);let meta=await axios.get(tokenURI);meta=meta.data;let price=ethers.utils.formatUnits(i.price.toString(),'ether');let item={price,tokenId:i.tokenId.toNumber(),seller:i.seller,owner:i.owner,image:meta.image,name:meta.name,description:meta.description};sumPrice+=Number(price);return item;}));updateData(items);updateFetched(true);updateAddress(addr);updateTotalPrice(sumPrice.toPrecision(3));}const params=useParams();const tokenId=params.tokenId;if(!dataFetched)getNFTData(tokenId);return/*#__PURE__*/_jsxs(\"div\",{className:\"profileClass\",style:{\"min-height\":\"100vh\"},children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"profileClass\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex text-center flex-col mt-11 md:text-2xl text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Wallet Address\"}),address]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"No. of NFTs\"}),data.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-20\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Total Value\"}),totalPrice,\" ETH\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col text-center items-center mt-11 text-white\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"font-bold\",children:\"Your NFTs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center flex-wrap max-w-screen-xl\",children:data.map((value,index)=>{return/*#__PURE__*/_jsx(NFTTile,{data:value},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 text-xl\",children:data.length==0?\"Oops, No NFT data to display (Are you logged in?)\":\"\"})]})]})]});};","map":{"version":3,"names":["Navbar","useLocation","useParams","MarketplaceJSON","axios","useState","NFTTile","jsx","_jsx","jsxs","_jsxs","Profile","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","getAddress","contract","Contract","abi","transaction","getMyNFTs","items","Promise","all","map","i","tokenURI","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","toPrecision","params","className","style","children","length","value","index"],"sources":["C:/Users/upadh/Desktop/nft_mp/NFT-Marketplace-Tutorial/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport NFTTile from \"./NFTTile\";\r\n\r\nexport default function Profile () {\r\n    const [data, updateData] = useState([]);\r\n    const [dataFetched, updateFetched] = useState(false);\r\n    const [address, updateAddress] = useState(\"0x\");\r\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\r\n\r\n    async function getNFTData(tokenId) {\r\n        const ethers = require(\"ethers\");\r\n        let sumPrice = 0;\r\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const addr = await signer.getAddress();\r\n\r\n        //Pull the deployed contract instance\r\n        let contract = new ethers.Contract(MarketplaceJSON.address, MarketplaceJSON.abi, signer)\r\n\r\n        //create an NFT Token\r\n        let transaction = await contract.getMyNFTs()\r\n\r\n        /*\r\n        * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\r\n        * and creates an object of information that is to be displayed\r\n        */\r\n        \r\n        const items = await Promise.all(transaction.map(async i => {\r\n            const tokenURI = await contract.tokenURI(i.tokenId);\r\n            let meta = await axios.get(tokenURI);\r\n            meta = meta.data;\r\n\r\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\r\n            let item = {\r\n                price,\r\n                tokenId: i.tokenId.toNumber(),\r\n                seller: i.seller,\r\n                owner: i.owner,\r\n                image: meta.image,\r\n                name: meta.name,\r\n                description: meta.description,\r\n            }\r\n            sumPrice += Number(price);\r\n            return item;\r\n        }))\r\n\r\n        updateData(items);\r\n        updateFetched(true);\r\n        updateAddress(addr);\r\n        updateTotalPrice(sumPrice.toPrecision(3));\r\n    }\r\n\r\n    const params = useParams();\r\n    const tokenId = params.tokenId;\r\n    if(!dataFetched)\r\n        getNFTData(tokenId);\r\n\r\n    return (\r\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\r\n            <Navbar></Navbar>\r\n            <div className=\"profileClass\">\r\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\r\n                <div className=\"mb-5\">\r\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \r\n                    {address}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\r\n                    <div>\r\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\r\n                        {data.length}\r\n                    </div>\r\n                    <div className=\"ml-20\">\r\n                        <h2 className=\"font-bold\">Total Value</h2>\r\n                        {totalPrice} ETH\r\n                    </div>\r\n            </div>\r\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\r\n                <h2 className=\"font-bold\">Your NFTs</h2>\r\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\r\n                    {data.map((value, index) => {\r\n                    return <NFTTile data={value} key={index}></NFTTile>;\r\n                    })}\r\n                </div>\r\n                <div className=\"mt-10 text-xl\">\r\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}